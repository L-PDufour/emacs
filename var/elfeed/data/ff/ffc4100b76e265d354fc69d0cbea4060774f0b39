
        <link rel="stylesheet" type="text/css" href="https://rahuljuliato.com/rss-styles.css">
        <p>This guide walks you through compiling Emacs 30.1 on Debian 12,
covering the download, checksum verification (SHA1, SHA256), and build
process. With Debianâ€™s package dependencies, you can quickly compile,
install, and uninstall Emacs with ease.</p>
<p>Emacs 30.1 introduces security fixes, performance improvements, and
new features. If you prefer to build it from source, this guide walks
you through the process step by step.</p>
<h2>Compiling Emacs 30.1 from the source</h2>
<p>Today, Emacs community received a really nice message from
Stefan Kangas which currently is a maintainer of GNU Emacs.</p>
<p>You can read it here:
<a href="https://lists.gnu.org/archive/html/emacs-devel/2025-02/msg00997.html">https://lists.gnu.org/archive/html/emacs-devel/2025-02/msg00997.html</a>.</p>
<p>This gives us the opportunity of building Emacs from the source (which I
usually prefer, since I like to toggle some switches).</p>
<p>The next steps in this short tutorial will take in consideration you
have the latest Debian release, in my case, running <code>uname -a</code> returns:</p>
<div class="remark-highlight"><pre class="language-bash"><code class="language-bash">Linux debian <span class="token number">6.1</span>.0-31-amd64 <span class="token comment">#1 SMP PREEMPT_DYNAMIC Debian 6.1.128-1 (2025-02-07) x86_64 GNU/Linux</span>
</code></pre></div>
<h2>Downloading Emacs Source-Code</h2>
<p>Create a new directory of your liking and cd into it:</p>
<div class="remark-highlight"><pre class="language-bash"><code class="language-bash"><span class="token function">mkdir</span> ~/emacs_build
<span class="token builtin class-name">cd</span> emacs_build
</code></pre></div>
<p>Download the Emacs source code file. You can do this from
<a href="https://ftp.gnu.org/gnu/emacs/">https://ftp.gnu.org/gnu/emacs/</a>, by
accessing it from your web-browser, or:</p>
<div class="remark-highlight"><pre class="language-unknown"><code class="language-unknown">wget -c  https://ftpmirror.gnu.org/emacs/emacs-30.1.tar.gz</code></pre></div>
<h2>Verifying the tarball checksum</h2>
<p>Now verify the tarball (.tar.gz compressed file) checksum by running:</p>
<div class="remark-highlight"><pre class="language-bash"><code class="language-bash">sha1sum emacs-30.1.tar.gz
</code></pre></div>
<p>or</p>
<div class="remark-highlight"><pre class="language-bash"><code class="language-bash">sha256sum emacs-30.1.tar.gz
</code></pre></div>
<p>The returned sums should match those provided on the original release note. In my case:</p>
<div class="remark-highlight"><pre class="language-bash"><code class="language-bash">57c382f8cd2bd58b146b4b120ab8941f261b82b7  emacs-30.1.tar.gz
54404782ea5de37e8fcc4391fa9d4a41359a4ba9689b541f6bc97dd1ac283f6c  emacs-30.1.tar.gz
</code></pre></div>
<p>If something is strange, stop here, check the sources and make sure
you have an authentic copy of Emacs source code.</p>
<h2>Unpacking the tarball</h2>
<p>You can now unpack the tarball by running:</p>
<div class="remark-highlight"><pre class="language-bash"><code class="language-bash"><span class="token function">tar</span> xvfz emacs-30.1.tar.gz
</code></pre></div>
<p>After that enter the created folder with:</p>
<div class="remark-highlight"><pre class="language-bash"><code class="language-bash"><span class="token builtin class-name">cd</span> emacs-30.1
</code></pre></div>
<h2>Configuring for the build</h2>
<p>Usually, building something from source means going trough config and make, several
times, resolving dependencies and so on.</p>
<p>Here we're gonna cheat a little bit. Since Debian already ships some
sort (normally older) of Emacs. We can ask to install the build
dependencies for Emacs and save us some configure-make loop time.</p>
<p>Do this with:</p>
<div class="remark-highlight"><pre class="language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> build-dep emacs
</code></pre></div>
<p>After this, it is time to configure things.</p>
<p>You can check all Emacs flags by running <code>./configure --help</code>.</p>
<p>I usually go with these options:</p>
<div class="remark-highlight"><pre class="language-bash"><code class="language-bash">./configure --with-native-compilation<span class="token operator">=</span>aot<span class="token punctuation">\</span>
            --with-tree-sitter<span class="token punctuation">\</span>
            --with-gif<span class="token punctuation">\</span>
            --with-png<span class="token punctuation">\</span>
            --with-jpeg<span class="token punctuation">\</span>
            --with-rsvg<span class="token punctuation">\</span>
            --with-tiff<span class="token punctuation">\</span>
            --with-imagemagick<span class="token punctuation">\</span>
            --with-pgtk<span class="token punctuation">\</span>
            --with-mailutils
</code></pre></div>
<p>Customize it to your will.</p>
<h2>Making and Installing</h2>
<p>In this step we're actually building the software and installing.</p>
<p>Start by cleaning any older building with:</p>
<div class="remark-highlight"><pre class="language-bash"><code class="language-bash"><span class="token function">make</span> clean
</code></pre></div>
<p>If you had some problem during a previous make, or had to stop it for some reason,
this will ensure you new "build" is clean and starting from the beginning.</p>
<p>Now we actually run make with:</p>
<div class="remark-highlight"><pre class="language-bash"><code class="language-bash"><span class="token function">make</span> <span class="token parameter variable">-j8</span>
</code></pre></div>
<p>This will compile Emacs by allowing 8 jobs at once. You can leave make with only <code>-j</code>
flag for <code>infinite</code> jobs or customize at will with a number.</p>
<p>If everything runs ok and make exits successfully you can test Emacs with <code>./src/emacs</code>, I recommend just doing a version check with:</p>
<div class="remark-highlight"><pre class="language-bash"><code class="language-bash">./src/emacs <span class="token parameter variable">--version</span>
</code></pre></div>
<p>That may return:</p>
<div class="remark-highlight"><pre class="language-bash"><code class="language-bash">GNU Emacs <span class="token number">30.1</span>
Copyright <span class="token punctuation">(</span>C<span class="token punctuation">)</span> <span class="token number">2025</span> Free Software Foundation, Inc.
GNU Emacs comes with ABSOLUTELY NO WARRANTY.
You may redistribute copies of GNU Emacs
under the terms of the GNU General Public License.
For <span class="token function">more</span> information about these matters, see the <span class="token function">file</span> named COPYING.
</code></pre></div>
<p>To have your built Emacs readily available, install it to your system with:</p>
<div class="remark-highlight"><pre class="language-bash"><code class="language-bash"><span class="token function">make</span> <span class="token function">install</span>
</code></pre></div>
<p>Verify if you have the compiled version to your path by issuing:</p>
<div class="remark-highlight"><pre class="language-bash"><code class="language-bash">emacs <span class="token parameter variable">--version</span>
</code></pre></div>
<p>You may have again:</p>
<div class="remark-highlight"><pre class="language-bash"><code class="language-bash">GNU Emacs <span class="token number">30.1</span>
<span class="token punctuation">..</span>.
</code></pre></div>
<p>And that's it!</p>
<h2>Uninstalling Emacs</h2>
<p>If things go wrong or you need to uninstall a version of Emacs
before compiling a new one, it is a "necessity practice" to keep the
folder from where you built your software, so you can run: <code>make uninstall</code> and remove it completely from your system.</p>
<h2>Wrapping Up</h2>
<p>Youâ€™ve successfully compiled and installed Emacs 30.1 from source!
Now, enjoy the latest Emacs features and customize it to your
workflow. Happy hacking! ðŸš€</p>
