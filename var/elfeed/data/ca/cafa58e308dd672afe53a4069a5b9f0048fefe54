<html><head></head><body><p>I got asked how I manage papers, notes, and citations for doing research. I started writing out a <em>very</em> long Slack message, but it quickly passed the threshold where I ought to just turn it into a blog post.</p>
<p>The short of it: I’m an incorrigible Emacs user, so I do a lot through my editor of choice on my laptop. That said, <a href="https://www.zotero.org/">Zotero</a> is a fabulous piece of technology, and I rely on it heavily to get my work done.</p>
<h2>
  General recommendations
  <a href="#general-recommendations">#</a>
</h2>
<p><strong>Use Zotero in some capacity.</strong> Zotero is great. You should use it at a minimum for collecting papers and keeping paper metadata. It’s completely free and open source. It has excellent apps for iOS and Android so you can read and markup papers on a tablet and access everything on your desktop, but that’s optional. It’s so smart about finding citation information: drag a PDF into it and it will look for the DOI or something and auto-populate the relevant bibliographic information. It’s not perfect, but it’s still pretty darn helpful.</p>
<p>When you’re starting out, I recommend using Zotero’s hosted syncing purely because it’s so easy to use. If you start being a paper packrat and need more than the 300 MB limit, you can self-host or pay a little for more storage. (I’m using 797 MB after several years of heavy Zotero use—I even have a few books in my library!) The lovely thing is <em>you don’t have to commit to syncing up-front</em>. You can start with purely local storage too if you want.</p>
<p>If you’re a LaTeX user like me, you should use the <a href="https://github.com/retorquere/zotero-better-bibtex">Better Bibtex</a> package. You can configure it to make a <code>.bib</code> file for your entire library or just certain collections. I keep a big <code>.bib</code> file for my entire library and then separate <code>.bib</code> files for each paper I write.

<span class="sidenote">
As long as I am the sole author, that is. My advisor prefers manually managing bibliographies, so what I tend to do is manually copy the reference information from my main <code>.bib</code> file into the <code>.bib</code> file for our shared paper.
</span></p>
<h2>
  My setup: hybrid of Emacs and Zotero
  <a href="#my-setup-hybrid-of-emacs-and-zotero">#</a>
</h2>
<p>I’m as close to an Emacs maximalist as you will find. Nevertheless, <em>I prefer reading and most note-taking outside of Emacs.</em> I read and annotate papers on my iPad, and Zotero syncs the annotations to my desktop.</p>
<p>When I’m writing papers, I use the <a href="https://github.com/emacs-citar/citar">Citar</a> package in Emacs. This makes it easy to find references and insert citations. Works for Markdown, Org-mode, and LaTeX files. If you’re wondering whether or not it can do a particular thing, the answer is going to be “yes” or “there’s a package to do that” or “it’s easy to add that functionality” or “I don’t know but Claude could probably get you pretty close in modifying it to do that.”</p>
<p>I’ll still take some notes on a paper inside of Emacs, but Zotero is how I primarily manage annotations. When I do a literature review I’ll make a big note in Emacs and just link to the papers that I’m referencing.</p>
<h2>
  Plain-text maximalist
  <a href="#plain-text-maximalist">#</a>
</h2>
<p>If you are a plain-text maximalist and like to sync everything via Git or something, then you should be using Emacs. If you are strong enough to resit the pull of closed-format tools for this long, Emacs is for you. It is not a text editor; <em>it is a toolkit to build your ideal text editor</em>. If getting started is intimidating, try out <a href="https://codeberg.org/ashton314/emacs-bedrock">my starter kit</a>, which is basically a set of sane defaults with helpful commentary on how to customize it further. Using Emacs will enable you to build a workflow that is exactly tailored to your idiosyncrasies. It’s an investment, but a worthy one.</p>
<p>So, if you are committed to the Emacs + plain text way, here is what I would recommend:</p>
<ol>
<li>
<p>Still use Zotero to store papers &amp; associated metadata. Don’t use it for annotations though.</p>
</li>
<li>
<p>Use Emacs and install the <a href="https://github.com/emacs-citar/citar">Citar</a> package. It ships with a function called <code>citar-open-entry-in-zotero</code> which can help you jump from Emacs → Zotero entry. I use this a lot.</p>
</li>
<li>
<p>Use the <a href="https://protesilaos.com/emacs/denote">Denote</a> Zettelkasten-style personal knowledge management (PKM) system. This provides utilities to create notes with tags, links (and automatic backlinks!), etc. all in plain-text. Sync this with Git or whatever.</p>
</li>
<li>
<p>Tie Denote and Citar together with the <a href="https://github.com/pprevos/citar-denote">denote-citar</a> package. Now, when you search for a paper with Citar, you can open a notes file for that paper. When you do, you’ll get a split screen: paper on the right, notes file on the left. If you use the <a href="https://github.com/vedang/pdf-tools">pdf-tools package</a> (and you should) then you can even add annotations to the PDF inside of Emacs!</p>
</li>
</ol>
<h2>
  Build your own system
  <a href="#build-your-own-system">#</a>
</h2>
<p>The most important thing is that you build your own system. You have to own it. You might find it easier to adopt someone else’s system, but you should be intentional about every habit you acquire. Be prepared to iterate.</p>
<p>I used to be rather rigid with how I organized papers. I found that extreme structure was more constricting than helpful, so there’s a little messiness with how I’m organized, and I’m OK with that.</p>
<p>If you want to know exactly how I configure any of the above packages in Emacs, feel free to <a href="https://lambdaland.org/#contact">contact me</a>.</p></body></html>