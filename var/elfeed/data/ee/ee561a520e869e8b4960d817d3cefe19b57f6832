<html><head></head><body><p>It all started with Super Bowl <strong>LIX</strong>. “What number is that?” Sure, that answer could be solved with a Google search, or even worse, burning petrol to fuel some LLM query. Being an Emacs user, I was certain someone had already solved the problem of translation to Roman numbers. Indeed this was the case but the answer was in two separate packages, both included in Emacs:</p>
<ul>
<li>Roman to Hindu-Arabic number translation was covered by the command <code>rst-roman-to-arabic</code> in the reStructuredText (<code>rst</code>) package.</li>
<li>Hindu-Arabic to Roman number translation was covered by the command <code>org-export-number-to-roman</code> in the Org export (<code>ox</code>) package.</li>
</ul>
<p>“Hunh” I thought, seems like I’d never recall that these two packages have the commands that would do the job for me. I’d have a much better chance of using them if they were in a single package whose name I could remember.</p>
<p>So begat <code>numeri</code>, a new package that wraps both of the above commands, <a href="https://melpa.org/#/numeri">now available on MELPA</a>.</p>
<p>There are two commands of note:</p>
<ul>
<li>
<p><code>numeri-arabic-to-roman</code></p>
<p>This command will accept either an Arabic integer number selected as a region or input via mini-buffer prompt and convert it to its Roman equivalent. The result is copied into the kill-ring.</p>
</li>
<li>
<p><code>numeri-roman-to-arabic</code></p>
<p>This command will accept either a Roman integer number selected as a region or input via mini-buffer prompt and convert it to its Arabic equivalent. The result is copied into the kill-ring.</p>
</li>
</ul>
<h1>Closing Thoughts</h1>
<p>I have no expectations on how useful folks will find <code>numeri</code>. Regardless, there is delight in knowing that for even the most esoteric of problems, there’s a non-zero chance that someone has already solved it in Emacs.</p></body></html>