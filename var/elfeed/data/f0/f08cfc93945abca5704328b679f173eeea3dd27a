<html><head></head><body><p>I recently came across a Reddit post titled
<a href="https://www.reddit.com/r/emacs/comments/1mv5hez/how_to_group_buffers_that_are_important_to_visit/">How to group buffers that are important to visit later</a>
which discusses various methods for buffer grouping in Emacs.</p>
<p>In the comments, which are typically engaging, some users
mentioned using the built-in <code>bookmarks</code> package, while others
recommended the <code>easysession</code> package or alternative approaches for
effective buffer grouping.</p>
<p>Additionally, there were mentions of the built-in <code>ibuffer</code> package,
which I personally use for buffer grouping. In this post, I’ll
share my IBuffer configuration to demonstrate how I leverage it for
this purpose.</p>
<p>Some ideas in my configuration are inspired by an excellent post,
<a href="https://protesilaos.com/emacs/dotemacs">GNU Emacs configuration</a>
by <a href="https://protesilaos.com/about/">Protesilaos Stavrou</a>,
a renowned Emacs expert. All of his posts are well worth reading
for their insightful and practical Emacs advice.</p>
<h2>Prettifying the IBuffer Window</h2>
<p>To make my IBuffer window visually appealing, I use an icon set
provided by the external
<a href="https://github.com/seagle0128/all-the-icons-ibuffer"><code>all-the-icons-ibuffer</code></a> package.</p>
<div class="highlight"><pre><code class="language-elisp"><span><span><span>;; Prerequisites</span>
</span></span><span><span>(use-package all-the-icons-ibuffer :ensure <span>t</span>
</span></span><span><span>  :hook (ibuffer-mode <span>.</span> all-the-icons-ibuffer-mode))
</span></span></code></pre></div><h2>IBuffer Configuration</h2>
<div class="highlight"><pre><code class="language-elisp"><span><span>(use-package ibuffer :ensure <span>nil</span>
</span></span><span><span>  :config
</span></span><span><span>  (setq ibuffer-expert <span>t</span>)
</span></span><span><span>  (setq ibuffer-display-summary <span>nil</span>)
</span></span><span><span>  (setq ibuffer-use-other-window <span>nil</span>)
</span></span><span><span>  (setq ibuffer-show-empty-filter-groups <span>nil</span>)
</span></span><span><span>  (setq ibuffer-default-sorting-mode <span>'filename/process</span>)
</span></span><span><span>  (setq ibuffer-title-face <span>'font-lock-doc-face</span>)
</span></span><span><span>  (setq ibuffer-use-header-line <span>t</span>)
</span></span><span><span>  (setq ibuffer-default-shrink-to-minimum-size <span>nil</span>)
</span></span><span><span>  (setq ibuffer-formats
</span></span><span><span>        <span>'</span>((mark modified read-only locked <span>" "</span>
</span></span><span><span>                (name <span>30</span> <span>30</span> :left :elide)
</span></span><span><span>                <span>" "</span>
</span></span><span><span>                (size <span>9</span> <span>-1</span> :right)
</span></span><span><span>                <span>" "</span>
</span></span><span><span>                (mode <span>16</span> <span>16</span> :left :elide)
</span></span><span><span>                <span>" "</span> filename-and-process)
</span></span><span><span>          (mark <span>" "</span>
</span></span><span><span>                (name <span>16</span> <span>-1</span>)
</span></span><span><span>                <span>" "</span> filename)))
</span></span><span><span>  (setq ibuffer-saved-filter-groups
</span></span><span><span>        <span>'</span>((<span>"Main"</span>
</span></span><span><span>           (<span>"Directories"</span> (mode <span>.</span> dired-mode))
</span></span><span><span>           (<span>"C++"</span> (or
</span></span><span><span>                   (mode <span>.</span> c++-mode)
</span></span><span><span>                   (mode <span>.</span> c++-ts-mode)
</span></span><span><span>                   (mode <span>.</span> c-mode)
</span></span><span><span>                   (mode <span>.</span> c-ts-mode)
</span></span><span><span>                   (mode <span>.</span> c-or-c++-ts-mode)))
</span></span><span><span>           (<span>"Python"</span> (or
</span></span><span><span>                      (mode <span>.</span> python-ts-mode)
</span></span><span><span>                      (mode <span>.</span> c-mode)
</span></span><span><span>                      (mode <span>.</span> python-mode)))
</span></span><span><span>           (<span>"Build"</span> (or
</span></span><span><span>                     (mode <span>.</span> make-mode)
</span></span><span><span>                     (mode <span>.</span> makefile-gmake-mode)
</span></span><span><span>                     (name <span>.</span> <span>"^Makefile$"</span>)
</span></span><span><span>                     (mode <span>.</span> change-log-mode)))
</span></span><span><span>           (<span>"Scripts"</span> (or
</span></span><span><span>                       (mode <span>.</span> shell-script-mode)
</span></span><span><span>                       (mode <span>.</span> shell-mode)
</span></span><span><span>                       (mode <span>.</span> sh-mode)
</span></span><span><span>                       (mode <span>.</span> lua-mode)
</span></span><span><span>                       (mode <span>.</span> bat-mode)))
</span></span><span><span>           (<span>"Config"</span> (or
</span></span><span><span>                      (mode <span>.</span> conf-mode)
</span></span><span><span>                      (mode <span>.</span> conf-toml-mode)
</span></span><span><span>                      (mode <span>.</span> toml-ts-mode)
</span></span><span><span>                      (mode <span>.</span> conf-windows-mode)
</span></span><span><span>                      (name <span>.</span> <span>"^\\.clangd$"</span>)
</span></span><span><span>                      (name <span>.</span> <span>"^\\.gitignore$"</span>)
</span></span><span><span>                      (name <span>.</span> <span>"^Doxyfile$"</span>)
</span></span><span><span>                      (name <span>.</span> <span>"^config\\.toml$"</span>)
</span></span><span><span>                      (mode <span>.</span> yaml-mode)))
</span></span><span><span>           (<span>"Web"</span> (or
</span></span><span><span>                   (mode <span>.</span> mhtml-mode)
</span></span><span><span>                   (mode <span>.</span> html-mode)
</span></span><span><span>                   (mode <span>.</span> web-mode)
</span></span><span><span>                   (mode <span>.</span> nxml-mode)))
</span></span><span><span>           (<span>"CSS"</span> (or
</span></span><span><span>                   (mode <span>.</span> css-mode)
</span></span><span><span>                   (mode <span>.</span> sass-mode)))
</span></span><span><span>           (<span>"JS"</span> (or
</span></span><span><span>                  (mode <span>.</span> js-mode)
</span></span><span><span>                  (mode <span>.</span> rjsx-mode)))
</span></span><span><span>           (<span>"Markup"</span> (or
</span></span><span><span>                   (mode <span>.</span> markdown-mode)
</span></span><span><span>                   (mode <span>.</span> adoc-mode)))
</span></span><span><span>           (<span>"Org"</span> (mode <span>.</span> org-mode))
</span></span><span><span>           (<span>"LaTeX"</span> (name <span>.</span> <span>"\.tex$"</span>))
</span></span><span><span>           (<span>"Magit"</span> (or
</span></span><span><span>                     (mode <span>.</span> magit-blame-mode)
</span></span><span><span>                     (mode <span>.</span> magit-cherry-mode)
</span></span><span><span>                     (mode <span>.</span> magit-diff-mode)
</span></span><span><span>                     (mode <span>.</span> magit-log-mode)
</span></span><span><span>                     (mode <span>.</span> magit-process-mode)
</span></span><span><span>                     (mode <span>.</span> magit-status-mode)))
</span></span><span><span>           (<span>"Apps"</span> (or
</span></span><span><span>                    (mode <span>.</span> elfeed-search-mode)
</span></span><span><span>                    (mode <span>.</span> elfeed-show-mode)))
</span></span><span><span>           (<span>"Fundamental"</span> (or
</span></span><span><span>                           (mode <span>.</span> fundamental-mode)
</span></span><span><span>                           (mode <span>.</span> text-mode)))
</span></span><span><span>           (<span>"Emacs"</span> (or
</span></span><span><span>                     (mode <span>.</span> emacs-lisp-mode)
</span></span><span><span>                     (name <span>.</span> <span>"^\\*Help\\*$"</span>)
</span></span><span><span>                     (name <span>.</span> <span>"^\\*Custom.*"</span>)
</span></span><span><span>                     (name <span>.</span> <span>"^\\*Org Agenda\\*$"</span>)
</span></span><span><span>                     (name <span>.</span> <span>"^\\*info\\*$"</span>)
</span></span><span><span>                     (name <span>.</span> <span>"^\\*scratch\\*$"</span>)
</span></span><span><span>                     (name <span>.</span> <span>"^\\*Backtrace\\*$"</span>)
</span></span><span><span>                     (name <span>.</span> <span>"^\\*Messages\\*$"</span>))))))
</span></span><span><span>  :hook
</span></span><span><span>  (ibuffer-mode <span>.</span> (lambda ()
</span></span><span><span>                    (ibuffer-switch-to-saved-filter-groups <span>"Main"</span>)))
</span></span><span><span>)
</span></span></code></pre></div><figure><a href="https://olddeuteronomy.github.io/img/ibuffer.png"><img src="https://olddeuteronomy.github.io/img/ibuffer.png"></a><figcaption>
            <h4>IBuffer. Click or tap to view the full-size picture.</h4>
        </figcaption>
</figure>

<p>Since I use the <code>ibuffer</code> command frequently, I’ve bound it to the <code>&lt;F5&gt;</code>
key for quick access.</p>
<div class="highlight"><pre><code class="language-elisp"><span><span>(global-set-key [(f5)]  <span>#'</span>ibuffer)
</span></span></code></pre></div><h2>Casual IBuffer</h2>
<p>Another valuable resource for enhancing IBuffer is the
<a href="https://kickingvegas.github.io/casual/">Casual</a> project,
a suite of excellent Emacs packages developed by
<a href="https://mastodon.social/@kickingvegas@sfba.social">Charles Choi</a>.
As outlined in the
<a href="https://kickingvegas.github.io/casual/Motivations.html">Casual User Guide</a>,
its goals are to provide a keyboard-driven menu UI toolkit for common Emacs commands, to enable
casual discovery and use of infrequently used commands, and to serve
as a frequently used interface for supported modes.</p>
<p>The <a href="https://kickingvegas.github.io/casual/IBuffer.html">Casual IBuffer</a>
package specifically provides an intuitive user interface for Emacs
IBuffer, enhancing its functionality and ease of use.</p>
<div class="highlight"><pre><code class="language-elisp"><span><span><span>;; Requires `transient' package.</span>
</span></span><span><span><span>;; https://kickingvegas.github.io/casual/</span>
</span></span><span><span>(use-package casual :ensure <span>t</span>)
</span></span><span><span>
</span></span><span><span><span>;; IBuffer</span>
</span></span><span><span>(keymap-set ibuffer-mode-map <span>"C-o"</span> <span>#'</span>casual-ibuffer-tmenu)
</span></span><span><span>(keymap-set ibuffer-mode-map <span>"F"</span> <span>#'</span>casual-ibuffer-filter-tmenu)
</span></span><span><span>(keymap-set ibuffer-mode-map <span>"s"</span> <span>#'</span>casual-ibuffer-sortby-tmenu)
</span></span></code></pre></div><figure><a href="https://olddeuteronomy.github.io/img/ibuffer-casual.png"><img src="https://olddeuteronomy.github.io/img/ibuffer-casual.png"></a><figcaption>
            <h4>Casual IBuffer. Click or tap to view the full-size picture.</h4>
        </figcaption>
</figure>

<p>Happy emacsing!</p>
<p>— The Emacs Cat.</p></body></html>