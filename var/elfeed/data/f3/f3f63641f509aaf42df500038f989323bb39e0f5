<p data-bo="104">We’ve achieved our goals already with this series: we have a web service written
in Rust, built into a Docker image with nix, with a nice dev shell, that we can
deploy to <a href="https://fly.io">fly.io</a>.</p>

<p data-bo="302">But there’s always room for improvement, and so I wanted to talk about a few
things we didn’t bother doing in the previous chapters.</p>

<a id="making-clash-geoip-available-in-the-dev-shell" href="#making-clash-geoip-available-in-the-dev-shell" class="anchor"><h2>Making <code>clash-geoip</code> available in the dev shell</h2></a>
<p data-bo="488">When we ran our app locally, we signed up for a MaxMindDB account, and had to
download and unpack the “Country” Geolite2 database manually.</p>

















<a id="switching-from-openssl-to-rustls" href="#switching-from-openssl-to-rustls" class="anchor"></a>












<a id="using-docker-compose-to-run-the-service-locally" href="#using-docker-compose-to-run-the-service-locally" class="anchor"></a>




















<a id="persisting-the-analytics-database" href="#persisting-the-analytics-database" class="anchor"></a>



























<a id="using-sqlite-asynchronously" href="#using-sqlite-asynchronously" class="anchor"></a>










































