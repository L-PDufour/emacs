<p data-bo="200">The part that makes Rust scary is the part that makes it unique.</p>

<p data-bo="266">And it’s also what I miss in other programming languages — let me explain!</p>

<p data-bo="344">Rust syntax starts simple.</p>

<p data-bo="372">This function prints a number:</p>

<figure role="region" aria-label="Code block" class="code-block" translate="no" data-lang="rust" data-bo="404"><code class="scroll-wrapper"><i class=hh4>fn</i> <i class=hh3>show</i><i class=hh8>(</i><i class=hh17>n</i><i class=hh9>:</i> <i class=hh14>i64</i><i class=hh8>)</i> <i class=hh8>{</i>
    <i class=hh3>println</i><i class=hh3>!</i><i class=hh8>(</i><i class=hh10>"n = {n}"</i><i class=hh8>)</i><i class=hh9></i><i class=hh9>;</i>
<i class=hh8>}</i>
</code></figure><p data-bo="462">And this program calls that function — it looks like any C-family language so far,
we got parentheses, we got curly brackets, we got, uhh…</p>

<div data-bo="608" class="dialog">
<div class="dialog-head bear-mark" title="Cool bear says:">
  <picture><source type="image/jxl" media="(max-width: 400px)" srcset="https://cdn.fasterthanli.me/content/img/reimena/coolbear-neutral~a9635512c248538c.w400.jxl 1x,https://cdn.fasterthanli.me/content/img/reimena/coolbear-neutral~ff7d544e857abfc9.w800.jxl 2x"><source type="image/jxl" media="(max-width: 900px)" srcset="https://cdn.fasterthanli.me/content/img/reimena/coolbear-neutral~1aa8718807b2a71e.w900.jxl 1x"><source type="image/jxl" srcset="https://cdn.fasterthanli.me/content/img/reimena/coolbear-neutral~7010eabf1d70d303.jxl 1x,https://cdn.fasterthanli.me/content/img/reimena/coolbear-neutral~7010eabf1d70d303.jxl 2x"><source type="image/avif" media="(max-width: 400px)" srcset="https://cdn.fasterthanli.me/content/img/reimena/coolbear-neutral~6d942171cade4d3f.w400.avif 1x,https://cdn.fasterthanli.me/content/img/reimena/coolbear-neutral~06a52b43f6e3d546.w800.avif 2x"><source type="image/avif" media="(max-width: 900px)" srcset="https://cdn.fasterthanli.me/content/img/reimena/coolbear-neutral~18eb126743dc56d9.w900.avif 1x"><source type="image/avif" srcset="https://cdn.fasterthanli.me/content/img/reimena/coolbear-neutral~878df1cc87d6ed50.avif 1x,https://cdn.fasterthanli.me/content/img/reimena/coolbear-neutral~878df1cc87d6ed50.avif 2x"><source type="image/webp" media="(max-width: 400px)" srcset="https://cdn.fasterthanli.me/content/img/reimena/coolbear-neutral~1705a9c37db6c792.w400.webp 1x,https://cdn.fasterthanli.me/content/img/reimena/coolbear-neutral~70614544e97d8c4e.w800.webp 2x"><source type="image/webp" media="(max-width: 900px)" srcset="https://cdn.fasterthanli.me/content/img/reimena/coolbear-neutral~d752b58b01819a19.w900.webp 1x"><source type="image/webp" srcset="https://cdn.fasterthanli.me/content/img/reimena/coolbear-neutral~1eecd3d081b40415.webp 1x,https://cdn.fasterthanli.me/content/img/reimena/coolbear-neutral~1eecd3d081b40415.webp 2x"><img src="https://cdn.fasterthanli.me/content/img/reimena/coolbear-neutral~7010eabf1d70d303.jxl" loading="lazy" width="42" height="42" data-kind="media" data-input-path="/content/img/reimena/coolbear-neutral.jxl" alt="Cool bear"></picture>
</div>
<div class="dialog-text markup-container">
<p data-bo="624">…string interpolation isn’t very C-like I guess?</p>

</div>
</div><a id="rust-move-semantics" href="#rust-move-semantics" class="anchor"></a>








































<a id="javascript-semantics" href="#javascript-semantics" class="anchor"></a>


























<a id="go-semantics" href="#go-semantics" class="anchor"></a>


<!-- playwall -->
































<a id="deep-cloning" href="#deep-cloning" class="anchor"></a>







































<a id="constness-in-c-and-c" href="#constness-in-c-and-c" class="anchor"></a>






















<a id="linear-types" href="#linear-types" class="anchor"></a>
































<a id="immutability-in-rust" href="#immutability-in-rust" class="anchor"></a>


























<a id="unsafe-rust" href="#unsafe-rust" class="anchor"></a>
































































<a id="aliasing-xor-mutability" href="#aliasing-xor-mutability" class="anchor"></a>












































































