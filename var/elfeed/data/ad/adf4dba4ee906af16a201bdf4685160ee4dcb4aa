<p><code class="language-plaintext highlighter-rouge">beframe</code> enables a frame-oriented Emacs workflow where each frame has
access only to the list of buffers visited therein. In the interest of
brevity, we call buffers that belong to frames “beframed”.</p>

<ul>
  <li>Package name (GNU ELPA): <code class="language-plaintext highlighter-rouge">beframe</code></li>
  <li>Official manual: <a href="https://protesilaos.com/emacs/beframe">https://protesilaos.com/emacs/beframe</a></li>
  <li>Change log: <a href="https://protesilaos.com/emacs/beframe-changelog">https://protesilaos.com/emacs/beframe-changelog</a></li>
  <li>Git repositories:
    <ul>
      <li>GitHub: <a href="https://github.com/protesilaos/beframe">https://github.com/protesilaos/beframe</a></li>
      <li>GitLab: <a href="https://gitlab.com/protesilaos/beframe">https://gitlab.com/protesilaos/beframe</a></li>
    </ul>
  </li>
  <li>Video demo: <a href="https://protesilaos.com/codelog/2023-02-28-emacs-beframe-demo/">https://protesilaos.com/codelog/2023-02-28-emacs-beframe-demo/</a></li>
  <li>Backronym: Buffers Encapsulated in Frames Realise Advanced
Management of Emacs.</li>
</ul>

<p>Below are the release notes</p>

<hr />

<h2>Version 1.4.0 on 2025-06-28</h2>

<p>This version adds some minor improvements to a stable package.</p>

<h3>Per-frame Xref histories</h3>

<p>The built-in Xref mechanism is typically used to navigate to the
definition of the symbol at point in a programming major mode. The
command <code class="language-plaintext highlighter-rouge">xref-find-definitions</code> (<code class="language-plaintext highlighter-rouge">M-.</code> by default) jumps to the
source, while <code class="language-plaintext highlighter-rouge">xref-go-back</code> (<code class="language-plaintext highlighter-rouge">M-,</code> by default) goes back in the
history of visited positions until it reaches the starting point.</p>

<p>When <code class="language-plaintext highlighter-rouge">beframe-mode</code> is enabled, each new frame has its own Xref
history. This means that finding a definition in one frame does not
interfere with the Xref history of another frame.</p>

<h3>“Beframed” buffer prompt text is now optional</h3>

<p>When <code class="language-plaintext highlighter-rouge">beframe-mode</code> is enabled, it sets the standard
<code class="language-plaintext highlighter-rouge">read-buffer-function</code> to one that filters buffers by frame. Any
command that uses that, such as <code class="language-plaintext highlighter-rouge">switch-to-buffer</code> (<code class="language-plaintext highlighter-rouge">C-x b</code> by
default) is thus beframing its completion candidates.</p>

<p>Such prompts get a prefix to inform the user of their behaviour. By
default this is <code class="language-plaintext highlighter-rouge">[Beframed]</code>: it is subject to the user option <code class="language-plaintext highlighter-rouge">beframe-prompt-prefix</code>.
Users who do not wish to have any prefix can set this option to nil or
an empty string.</p>

<p>When there is a string, it is styled with the face <code class="language-plaintext highlighter-rouge">beframe-face-prompt-prefix</code>.</p>