<a id="what-s-a-ktls" href="#what-s-a-ktls" class="anchor"><h2>What’s a ktls</h2></a>
<p data-bo="151">I started work on <a href="https://lib.rs/crates/ktls">ktls</a> and <a href="https://lib.rs/crates/ktls-sys">ktls-sys</a>,
a pair of crates exposing <a href="https://www.kernel.org/doc/html/latest/networking/tls-offload.html">Kernel TLS offload</a>
to Rust, about <a href="https://github.com/rustls/ktls/commit/798466d7c3e659ecdf035afac0bea2b679aea4c4">two years ago</a>.</p>

<p data-bo="486">kTLS lets the kernel (and, in turn, any network interface that supports it) take care of encryption, framing,
etc., for the entire duration of a TLS connection… as soon as you <em>have</em> a TLS connection.</p>

<p data-bo="690">For the handshake itself (hellos, change cipher, encrypted extensions,
certificate verification, etc.), you still have to use a userland TLS
implementation.</p>







<a id="the-ktls-api-today" href="#the-ktls-api-today" class="anchor"></a>




<a id="coordinating-collaborating" href="#coordinating-collaborating" class="anchor"></a>








