;;; meow-tree-sitter-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from meow-tree-sitter.el

(autoload 'meow-tree-sitter-register-thing "meow-tree-sitter" "\
Register a query for TYPES with KEY in Meow.
Adds a query matching TYPES to `meow-char-thing-table' and
registers it with `meow-thing-register'.

TYPES should be the name of a type as a string, e.g.
\"function\", or a list of such types; \"TYPE.inside\" and
\"TYPE.around\" will then be registered appropriately.

If QUERY is non-nil, it should be an alist mapping language
strings to a custom query to use. Each query should have two
captures, one for \"TYPE.inside\" and one for \"TYPE.around\".
See this project's README for more details.

(fn KEY TYPES &optional QUERY)")
(autoload 'meow-tree-sitter-register-defaults "meow-tree-sitter" "\
Register default keybinds with Meow.

Note that this will override any existing things that use the default
binds!")
(register-definition-prefixes "meow-tree-sitter" '("meow-tree-sitter-"))

;;; End of scraped data

(provide 'meow-tree-sitter-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; meow-tree-sitter-autoloads.el ends here
